<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel7.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pRRSlKUUV//Z
</value>
  </data>
</root>